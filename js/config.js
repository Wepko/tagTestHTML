function listTags() {
	return [
		{
			name: `article`,
			description: `Представляет собой независимый фрагмент веб-страницы и, как правило, включает «шапку», основное содержимое и «подвал», в которых располагаются такие части, как заголовок, текст, имя автора, дата публикации, метки, рейтинг статьи и др.`,
			img: `img/article.png`,
			ball: 1
		},
		{
			name: `aside`,
			description: `Представляет собой раздел страницы, который имеет косвенное отношение к содержимому страницы и может быть рассмотрен отдельно от этого содержимого. `,
			img: `img/aside.png`,
			ball: 1
		},
		{
			name: `audio`,
			description: `Добавляет, воспроизводит и управляет настройками аудиозаписи на веб-странице. Путь к файлу задаётся через атрибут src или вложенный элемент &ltsource&gt. `,
			img: `img/audio.png`,
			ball: 1
		},
		{
			name: `bdi`,
			description: `Указывает фрагмент текста, который должен быть изолирован от изменения направления вывода текста. Такое поведение важно для текстов, одновременно содержащих разные языки, читающихся слева направо и справа налево.`,
			img: `img/bdi.png`,
			ball: 5
		},
		{
			name: `canvas`,
			description: `Создаёт область, в которой при помощи JavaScript можно рисовать разные объекты, выводить изображения, трансформировать их и менять свойства. `,
			img: `img/canvas.png`,
			ball: 2
		},
		{
			name: `data`,
			description: `Представляет содержимое в машиночитаемом виде, предназначенное для внешних автоматизированных систем или скриптов на самом сайте. Внутри &lt...&gt , к примеру, может храниться идентификатор товара, но никак не дата или время.`,
			img: `img/data.png`,
			ball: 4
		},
		{
			name: `datalist`,
			description: `Cоздаёт список вариантов, которые можно выбирать при наборе в текстовом поле. Изначально этот список скрыт и становится доступным при получении полем фокуса или при наборе текста.`,
			img: `img/datalist.png`,
			ball: 5
		},
		{
			name: `details`,
			description: `Используется для хранения информации, которую можно скрыть или показать по требованию пользователя. По умолчанию содержимое элемента не отображается, для изменения статуса применяется атрибут open.`,
			img: `img/details.png`,
			ball: 5
		},
		{
			name: `dialog`,
			description: `создаёт диалоговое окно, в котором можно выводить сообщение или форму, например, для входа на сайт.`,
			img: `img/dialog.png`,
			ball: 5
		},
		{
			name: `figcaption`,
			description: `Содержит описание для элемента &ltfigure&gt. должен быть первым или последним элементом в группе.`,
			img: `img/figcaption.png`,
			ball: 3
		},
		{
			name: `figure`,
			description: `Используется для группирования любых элементов, например, изображений и подписей к ним. не должен быть связан непосредственно с основным содержимым документа и при его перемещении в другое место смысл текста не должен меняться. Обычно применяется для иллюстраций, фрагментов кода, схем, графиков, диаграмм и др.`,
			img: `img/figure.png`,
			ball: 3
		},
		{
			name: `footer`,
			description: `Элемент задаёт «подвал» сайта или раздела веб-страницы, в нём может располагаться имя автора, дата документа, контактная и правовая информация.`,
			img: `img/footer.png`,
			ball: 1
		},
		{
			name: `header`,
			description: `Задаёт «шапку» сайта или раздела веб-страницы. Внутри «шапки» сайта обычно располагается логотип, название сайта, поисковая форма, навигационные ссылки и др.`,
			img: `img/header.png`,
			ball: 1
		},
		{
			name: `main`,
			description: `Элемент предназначен для основного содержимого документа. На странице может быть только один &lt...&gt и он не должен располагаться внутри элементов &ltarticle&gt, &ltaside&gt, &ltfooter&gt, &ltheader&gt, &ltnav&gt или &ltsection&gt.`,
			img: `img/main.png`,
			ball: 3
		},
		{
			name: `mark`,
			description: `Элемент помечает текст как выделенный. В браузере фоновый цвет текста внутри &lt...&gt выделяется жёлтым цветом.`,
			img: `img/mark.png`,
			ball: 3
		},
		{
			name: `menu`,
			description: `Элемент предназначен для отображения списка пунктов меню. Аналогично элементам &ltol&gt и &ltul&gt внутри контейнера &lt...&gt список формируется с помощью &ltli&gt.`,
			img: `img/menu.png`,
			ball: 3
		},
		{
			name: `menuitem`,
			description: `Задаёт команду, которую пользователь может вызывать через контекстное меню. Команда выглядит как текстовая метка, а также дополнительно может содержать небольшую картинку. Сама команда связана с программой на JavaScript.`,
			img: `img/menuitem.png`,
			ball: 2
		},
		{
			name: `meter`,
			description: `Используется для вывода значения в некотором известном диапазоне. Применяется преимущественно для отображения числовых значений, например, количества результатов поиска, объёма жидкости, давления и др.`,
			img: `img/meter.png`,
			ball: 5
		},
		{
			name: `nav`,
			description: `Элемент задаёт навигацию по сайту. Если на странице несколько блоков ссылок, то в &lt...&gt обычно помещают приоритетные ссылки. Также допустимо использовать несколько &lt...&gt в документе. Запрещается вкладывать &lt...&gt внутрь &ltaddress&gt.`,
			img: `img/nav.png`,
			ball: 1
		},
		{
			name: `output`,
			description: `Определяет область, в которую выводится информация, преимущественно с помощью скриптов.`,
			img: `img/output.png`,
			ball: 4
		},
		{
			name: `picture`,
			description: `Представляет собой контейнер для хранения нескольких элементов &ltsource&gt, которые поддерживают элемент &ltimg&gt. Это позволяет указывать разные изображения с учётом размера экрана, плотности пикселей, формата изображения и других параметров.`,
			img: `img/picture.png`,
			ball: 4
		},
		{
			name: `progress`,
			description: `Используется для отображения прогресса завершённости задачи. Изменение значения происходит через JavaScript.`,
			img: `img/progress.png`,
			ball: 3
		},
		{
			name: `ruby`,
			description: `Элемент предназначен для добавления небольшой аннотации сверху или снизу от заданного текста. Такая форма записи преимущественно используется для идеографической письменности вроде китайского языка, но может применяться и для других языков, если требуется написать один текст над другим.`,
			img: `img/ruby.png`,
			ball: 5
		},
		{
			name: `section`,
			description: `Задаёт раздел документа, может применяться для блока новостей, контактной информации, глав текста, вкладок в диалоговом окне и др. Раздел обычно содержит заголовок. Допускается вкладывать один элемент внутрь другого`,
			img: `img/ruby.png`,
			ball: 1
		},
		{
			name: `source`,
			description: `Вставляет звуковой или видеофайл для элементов &ltaudio&gt и &ltvideo&gt. Обобщённо такие файлы называются медийными. Также применяется для добавления изображений в контейнере &ltpicture&gt`,
			img: `img/source.png`,
			ball: 3
		},
		{
			name: `summary`,
			description: `Указывает заголовок для &ltdetails&gt, по которому можно щёлкать для разворачивания/сворачивания информации. Элемент &lt...&gt должен идти первым внутри &ltdetails&gt.`,
			img: `img/summary.png`,
			ball: 5
		},
		{
			name: `template`,
			description: `Элемент представляет собой механизм для хранения содержимого на стороне клиента, которое не отображается в процессе загрузки страницы, но впоследствии может быть заполнено с помощью JavaScript.`,
			img: `img/template.png`,
			ball: 5
		},
		{
			name: `time`,
			description: `Помечает текст внутри элемента &lt...&gt как дата, время или оба значения. Может указываться непосредственно внутри контейнера &lt...&gt, либо задаваться через атрибут datetime.`,
			img: `img/time.png`,
			ball: 4
		},

		{
			name: `track`,
			description: `Элемент позволяет авторам указать текстовую дорожку для медийных элементов &ltaudio&gt и &ltvideo&gt. Такая дорожка обычно содержит субтитры на разных языках, комментарии, заголовки и др.`,
			img: `img/track.png`,
			ball: 5
		},
		{
			name: `video`,
			description: `Добавляет, воспроизводит и управляет настройками видеоролика на веб-странице. Путь к файлу задаётся через атрибут src или вложенный элемент &ltsource&gt.`,
			img: `img/video.png`,
			ball: 2
		},
		{
			name: `wbr`,
			description: `Элемент указывает браузеру место, где допускается делать перенос строки в тексте, если этого требует ширина родительского элемента.`,
			img: `img/wbr.png`,
			ball: 5
		},
	];
}

////////////////function dop/////////////////////

//функция создает массив чисел от и до
function creatNumberArray(start, end, step) {
	let arr = [];
	for (let i = start; i < end; i++) {
		arr.push(i);
	}
	return arr;
}

function getRandom(min, max) {
  min = Math.ceil(min);
  max = Math.floor(max);
  return Math.floor(Math.random() * (max - min + 1)) + min; //Максимум и минимум включаются
}

//функция поис и замена
function findOnRandom(arr, keyWord) {
	const j = getRandom(0, arr.length-1);
	arr[j] = keyWord; 
	return  arr;
}
Array.prototype.shufle = function () {
	let arr = this.slice();
	for (let i = arr.length - 1; i >= 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [arr[i], arr[j]] = [arr[j], arr[i]];
    }
    return arr;
}

console.log([1,2,3,4,5,6].shufle());

/*function shuffle(a) {
    for (let i = a.length - 1; i &gt 0; i--) {
        const j = Math.floor(Math.random() * (i + 1));
        [a[i], a[j]] = [a[j], a[i]];
    }
    return a;
}*/